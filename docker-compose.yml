version: '3.8'

services:
  elasticsearch:
    container_name: elk_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elknet

  metricbeat:
    container_name: elk_metricbeat
    image: docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION}
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
    - elasticsearch
    volumes:
      - type: bind
        source: ./metricbeat/metricbeat.yml
        target: /usr/share/metricbeat/metricbeat.yml
    networks:
      - elknet

  logstash:
    container_name: elk_logstash
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}
    volumes:
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline/
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
      - type: bind
        source: ./logstash/config/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml        
      - type: bind
        source: ./logstash/drivers/postgresql-42.2.10.jar
        target: /usr/share/logstash/logstash-core/lib/jars/postgresql-42.2.10.jar
    ports:
      - "9600:9600"    
      - "5000:5000/tcp"
      - "5000:5000/udp"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      PGSQL_JDBC_URL: "jdbc:postgresql://host.docker.internal:5432/b3"
      PGSQL_JDBC_DRIVER: "org.postgresql.Driver"
      PGSQL_JDBC_DRIVER_JAR_LOCATION: "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.2.10.jar"
      PGSQL_JDBC_USERNAME: logstash_user
      PGSQL_JDBC_PASSWORD: logstash
      PGSQL_DC_HOST: "jdbc:postgresql://postgres:5432/postgres"
      PGSQL_DC_USER: ${POSTGRES_USER}
      PGSQL_DC_PASS: ${POSTGRES_PASS}
      ELASTICSEARCH_HOST: http://elasticsearch:9200
    networks:
      - elknet   
    depends_on:
      - elasticsearch
      
  kibana:
    container_name: elk_kibana
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elknet
    depends_on:
      - elasticsearch

  postgres:
    container_name: elk_postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    ports:
      - '5438:5432'
    networks:
      - elknet
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data
      - type: bind
        source: ./postgresql/data/create_tables.sql
        target: /docker-entrypoint-initdb.d/create_tables.sql
      - type: bind
        source: ./postgresql/data/insert_tables.sql
        target: /docker-entrypoint-initdb.d/insert_tables.sql
networks:
  elknet:
    driver: bridge
    name: elk_net

volumes:
  elasticsearch:
    name: elk_data
  postgres:
    name: elk_postgresql